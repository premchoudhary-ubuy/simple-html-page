name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger when pushing to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up SSH private key
      run: |
        # Create the .ssh directory if it doesn't exist
        mkdir -p ~/.ssh

        # Store the SSH private key from GitHub Secrets into the id_rsa file
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa

        # Secure the private key (chmod 600)
        chmod 600 ~/.ssh/id_rsa

        # Disable Strict Host Key Checking to avoid the 'Host key verification failed' error
        echo "Host *" > ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
        echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config
    
    - name: Install NGINX on EC2 (Step 1)
      run: |
        ssh -i ~/.ssh/id_rsa -o ServerAliveInterval=60 -o ServerAliveCountMax=5 ubuntu@ec2-44-206-251-5.compute-1.amazonaws.com << 'EOF'
          sudo apt update -y
        EOF

    - name: Install NGINX on EC2 (Step 2)
      run: |
        ssh -i ~/.ssh/id_rsa -o ServerAliveInterval=60 -o ServerAliveCountMax=5 ubuntu@ec2-44-206-251-5.compute-1.amazonaws.com << 'EOF'
          sudo apt install nginx -y
        EOF

    - name: Configure NGINX (Step 3)
      run: |
        ssh -i ~/.ssh/id_rsa -o ServerAliveInterval=60 -o ServerAliveCountMax=5 ubuntu@ec2-44-206-251-5.compute-1.amazonaws.com << 'EOF'
          sudo systemctl start nginx
          sudo systemctl enable nginx
        EOF

    - name: Deploy Website (Step 4)
      run: |
        ssh -i ~/.ssh/id_rsa -o ServerAliveInterval=60 -o ServerAliveCountMax=5 ubuntu@ec2-44-206-251-5.compute-1.amazonaws.com << 'EOF'
          sudo rm -rf /var/www/html/*
          sudo mkdir /var/yes
          sudo systemctl restart nginx
          EOF

